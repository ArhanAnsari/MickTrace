name: Lint and Clean - autopep8

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.14'
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: cache-pip
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install autopep8
      - name: Run autopep8 check
        id: lint
        run: |
          echo "Running autopep8 check..."
          autopep8 --diff --exit-code --recursive . || (echo " Linting failed. Run 'autopep8 --in-place --recursive .' to fix the issues." && exit 1)

      - name: Add PR Comment if Lint Fails
        if: failure() # Only run if a previous step fails
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '**Linting failed with autopep8!**\n\nTo fix this, run:\n\n```\nautopep8 --in-place --recursive .\n```\n\nCommit the changes and push again to pass the CI.\n\nIf you need help, check the workflow logs for the exact error.'
            })

      - name: Add PR Comment if Lint Succeeds
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… **Linting passed! Your code follows PEP8 style.**'
            })